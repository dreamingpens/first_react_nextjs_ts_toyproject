{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jang-wonjun/webDevCode/react_exercise/react-ts-app/code/14-adding-styling/src/components/NewTodo.tsx\";\nimport { useRef } from 'react';\nimport classes from './NewTodo.module.css';\nvar NewTodo = function NewTodo(props) {\n  var todoTextInputRef = useRef(null);\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var enteredText = todoTextInputRef.current.value;\n    if (enteredText.trim().length === 0) {\n      // throw an error\n      return;\n    }\n    props.onAddTodo(enteredText);\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Todo text\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"text\",\n    ref: todoTextInputRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Add Todo\"));\n};\nexport default NewTodo;","map":{"version":3,"names":["useRef","classes","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo","form"],"sources":["/Users/jang-wonjun/webDevCode/react_exercise/react-ts-app/code/14-adding-styling/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from 'react';\n\nimport classes from './NewTodo.module.css';\n\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      // throw an error\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <label htmlFor='text'>Todo text</label>\n      <input type='text' id='text' ref={todoTextInputRef} />\n      <button>Add Todo</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,IAAMC,OAAwD,GAAG,SAA3DA,OAAwD,CAAIC,KAAK,EAAK;EAC1E,IAAMC,gBAAgB,GAAGJ,MAAM,CAAmB,IAAI,CAAC;EAEvD,IAAMK,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAsB,EAAK;IAChDA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAO,CAAEC,KAAK;IAEnD,IAAIF,WAAW,CAACG,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACnC;MACA;IACF;IAEAT,KAAK,CAACU,SAAS,CAACL,WAAW,CAAC;EAC9B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEH,aAAc;IAAC,SAAS,EAAEJ,OAAO,CAACa,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrD;IAAO,OAAO,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,WAAS,CAAQ,eACvC;IAAO,IAAI,EAAC,MAAM;IAAC,EAAE,EAAC,MAAM;IAAC,GAAG,EAAEV,gBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,UAAQ,CAAS,CACpB;AAEX,CAAC;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module"}